FUM = md("**FUM**"),
Total_YPG = md("**YPG**"),
Passing_YPG = md("**Pass YPG**"),
Rushing_YPG = md("**Rush YPG**"),
Passing_YPA = md("**Pass YPA**"),
Passing_YPC = md("**Pass YPC**"),
Rushing_YPA = md("**Rush YPA**"),
third_down_conv_rate = md("**3D Conversion Rate**")
) %>%
fmt_number(
columns = c(Passing_TDs,Rushing_TDs,INTs,FUM, Total_YPG, Passing_YPG,Rushing_YPG),
decimals = 0
) %>%
fmt_number(
columns = c(Passing_YPA, Passing_YPC, Rushing_YPA, third_down_conv_rate),
decimals = 2
) %>%
data_color(
columns = c(Passing_TDs),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$pass_TDs),max(TEAMS$pass_TDs)
)
)
) %>%
data_color(
columns = c(Rushing_TDs),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$rush_TDs),max(TEAMS$rush_TDs)
)
)
)  %>%
data_color(
columns = c(INTs),
colors = scales::col_numeric(
palette = c('green','white','red'),
domain = c(min(TEAMS$interceptions),max(TEAMS$interceptions)
)
)
) %>%
data_color(
columns = c(FUM),
colors = scales::col_numeric(
palette = c('green','white','red'),
domain = c(min(TEAMS$fumbles_lost),max(TEAMS$fumbles_lost)
)
)
) %>%
data_color(
columns = c(Total_YPG),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Total_YPG),max(TEAMS$Total_YPG)
)
)
)  %>%
data_color(
columns = c(Passing_YPG),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Passing_YPG),max(TEAMS$Passing_YPG)
)
)
) %>%
data_color(
columns = c(Rushing_YPG),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Rushing_YPG),max(TEAMS$Rushing_YPG)
)
)
)%>%
data_color(
columns = c(Passing_YPA),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Passing_YPA),max(TEAMS$Passing_YPA)
)
)
)%>%
data_color(
columns = c(Passing_YPC	),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Passing_YPC),max(TEAMS$Passing_YPC)
)
)
)%>%
data_color(
columns = c(Rushing_YPA	),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$Rushing_YPA),max(TEAMS$Rushing_YPA)
)
)
)%>%
data_color(
columns = c(third_down_conv_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$third_down_conv_rate),max(TEAMS$third_down_conv_rate)
)
)
) %>%
tab_header(
title = md("**Statistical Comparison**"),
subtitle = md("2022 Season")
) %>%
tab_footnote(
footnote = "YPG = Yards Per Game",
locations = cells_column_labels(
columns = c(Total_YPG, Passing_YPG, Rushing_YPG)
)
) %>%
tab_footnote(
footnote = "YPA = Yards Per Attempt",
locations = cells_column_labels(
columns = c(Passing_YPA, Rushing_YPA)
)
)  %>%
tab_footnote(
footnote = "YPC = Yards Per Completion",
locations = cells_column_labels(
columns = c(Passing_YPC)
)
)
# TEAMS %>%
#    filter(team %in% c(ht,at)) %>%
#    select(team,  off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness
# ) %>%
#   transmute(Team= team, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
# gt(rowname_col = c("Team")) %>%
#   gt_fmt_cfb_logo(columns = c(Team)) %>%
#         fmt_number(
#         columns = c(off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness),
#         decimals = 2
#     )
#
off_ratings <- TEAMS %>%
filter(team %in% c(ht,at))
off_ratings %>%
select(team, conference.x, pass_TDs, rush_TDs,  passes_intercepted,fumbles_lost,Total_YPG, Passing_YPG,Rushing_YPG, Passing_YPA, Passing_YPC, Rushing_YPA, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
transmute(Team= team, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
gt(rowname_col = c("Team")) %>%
gt_fmt_cfb_logo(columns = c('Team')) %>%
cols_label(
Team = md("**Team**"),
off_success_rate = md("**Success Rate**"),
off_explosiveness = md("**Explosiveness**"),
off_power_success = md("**Power Success**"),
off_passing_plays_success_rate = md("**Pass SR**"),
off_passing_plays_explosiveness = md("**Pass EXP**"),
off_rushing_plays_success_rate = md("**Rush SR**"),
off_rushing_plays_explosiveness = md("**Rush EXP**"),
) %>%
fmt_number(
columns = c(off_success_rate, off_explosiveness, off_power_success,off_passing_plays_success_rate,off_passing_plays_explosiveness,off_rushing_plays_success_rate,off_rushing_plays_explosiveness),
decimals = 2
) %>%
data_color(
columns = c(off_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_success_rate),max(TEAMS$off_success_rate)
)
)
) %>%
data_color(
columns = c(off_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_explosiveness),max(TEAMS$off_explosiveness)
)
)
)  %>%
data_color(
columns = c(off_power_success),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_power_success),max(TEAMS$off_power_success)
)
)
) %>%
data_color(
columns = c(off_passing_plays_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_passing_plays_success_rate),max(TEAMS$off_passing_plays_success_rate)
)
)
) %>%
data_color(
columns = c(off_passing_plays_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_passing_plays_explosiveness),max(TEAMS$off_passing_plays_explosiveness)
)
)
) %>%
data_color(
columns = c(off_rushing_plays_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_rushing_plays_success_rate),max(TEAMS$off_rushing_plays_success_rate)
)
)
) %>%
data_color(
columns = c(off_rushing_plays_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_rushing_plays_explosiveness),max(TEAMS$off_rushing_plays_explosiveness)
)
)
) %>%
tab_header(
title = md("**Offensive Ratings Comparison**"),
subtitle = md("2022 Season")
)  %>%
tab_footnote(
footnote = "SR = Success Rate",
locations = cells_column_labels(
columns = c(off_passing_plays_success_rate,off_rushing_plays_success_rate)
)
)%>%
tab_footnote(
footnote = "EXP = Explosiveness",
locations = cells_column_labels(
columns = c(off_passing_plays_explosiveness,off_rushing_plays_explosiveness)
)
)
TEAMS$off_power_success
min(TEAMS$off_power_success)
# TEAMS %>%
#    filter(team %in% c(ht,at)) %>%
#    select(team,  off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness
# ) %>%
#   transmute(Team= team, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
# gt(rowname_col = c("Team")) %>%
#   gt_fmt_cfb_logo(columns = c(Team)) %>%
#         fmt_number(
#         columns = c(off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness),
#         decimals = 2
#     )
#
off_ratings <- TEAMS %>%
filter(team %in% c(ht,at))
off_ratings %>%
select(team, conference.x, pass_TDs, rush_TDs,  passes_intercepted,fumbles_lost,Total_YPG, Passing_YPG,Rushing_YPG, Passing_YPA, Passing_YPC, Rushing_YPA, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
transmute(Team= team, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness) %>%
gt(rowname_col = c("Team")) %>%
gt_fmt_cfb_logo(columns = c('Team')) %>%
cols_label(
Team = md("**Team**"),
off_success_rate = md("**Success Rate**"),
off_explosiveness = md("**Explosiveness**"),
off_power_success = md("**Power Success**"),
off_passing_plays_success_rate = md("**Pass SR**"),
off_passing_plays_explosiveness = md("**Pass EXP**"),
off_rushing_plays_success_rate = md("**Rush SR**"),
off_rushing_plays_explosiveness = md("**Rush EXP**"),
) %>%
fmt_number(
columns = c(off_success_rate, off_explosiveness, off_power_success,off_passing_plays_success_rate,off_passing_plays_explosiveness,off_rushing_plays_success_rate,off_rushing_plays_explosiveness),
decimals = 2
) %>%
data_color(
columns = c(off_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_success_rate,na.rm = TRUE),max(TEAMS$off_success_rate,na.rm = TRUE)
)
)
) %>%
data_color(
columns = c(off_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_explosiveness,na.rm = TRUE),max(TEAMS$off_explosiveness,na.rm = TRUE)
)
)
)  %>%
data_color(
columns = c(off_power_success),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_power_success,na.rm = TRUE),max(TEAMS$off_power_success,na.rm = TRUE)
)
)
) %>%
data_color(
columns = c(off_passing_plays_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_passing_plays_success_rate,na.rm = TRUE),max(TEAMS$off_passing_plays_success_rate,na.rm = TRUE)
)
)
) %>%
data_color(
columns = c(off_passing_plays_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_passing_plays_explosiveness,na.rm = TRUE),max(TEAMS$off_passing_plays_explosiveness,na.rm = TRUE)
)
)
) %>%
data_color(
columns = c(off_rushing_plays_success_rate),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_rushing_plays_success_rate,na.rm = TRUE),max(TEAMS$off_rushing_plays_success_rate,na.rm = TRUE)
)
)
) %>%
data_color(
columns = c(off_rushing_plays_explosiveness),
colors = scales::col_numeric(
palette = c('red','white','green'),
domain = c(min(TEAMS$off_rushing_plays_explosiveness,na.rm = TRUE),max(TEAMS$off_rushing_plays_explosiveness,na.rm = TRUE)
)
)
) %>%
tab_header(
title = md("**Offensive Ratings Comparison**"),
subtitle = md("2022 Season")
)  %>%
tab_footnote(
footnote = "SR = Success Rate",
locations = cells_column_labels(
columns = c(off_passing_plays_success_rate,off_rushing_plays_success_rate)
)
)%>%
tab_footnote(
footnote = "EXP = Explosiveness",
locations = cells_column_labels(
columns = c(off_passing_plays_explosiveness,off_rushing_plays_explosiveness)
)
)
input_season = 2023
week = 2
include_scarlett = 'yes'
df = data.frame()
#conference = c('SEC')
fbs = cfbd_conferences()
fbs = subset(fbs, classification == 'fbs')
fbs = fbs[1:10,]
fbs_teams = load_cfb_teams()
fbs_teams = subset(fbs_teams, classification == 'fbs')
# team setup
# ht = cfbd_game_info(2022, week = week, conference = conference)$home_team[1]
# home_team_filter = ht = cfbd_game_info(2022, week = week, conference = conference)$home_team[1]
# at = cfbd_game_info(2022, week = week, conference = conference)$away_team[1]
ht=c('Miami')
at=c("Texas A&M")
# advanced stats by team
stats <- cfbd_stats_season_team(input_season)
TEAMS <- cfbd_stats_season_advanced(input_season)
TEAMS <- inner_join(stats,TEAMS,by = 'team')
TEAMS$Total_YPG <- TEAMS$total_yds / TEAMS$games
TEAMS$Passing_YPG <- TEAMS$net_pass_yds / TEAMS$games
TEAMS$Rushing_YPG <- TEAMS$rush_yds / TEAMS$games
TEAMS$Passing_YPA <- TEAMS$net_pass_yds / TEAMS$pass_atts
TEAMS$Passing_YPC <- TEAMS$net_pass_yds / TEAMS$pass_comps
TEAMS$Rushing_YPA <- TEAMS$rush_yds / TEAMS$rush_atts
TEAMS$third_down_conv_rate<- TEAMS$third_down_convs / TEAMS$third_downs
TEAMS
# Betting information
# Betting information
lines <- cfbd_betting_lines(year = 2023, week = week, team = ht)
line <- subset(lines,provider == "DraftKings")
if (nrow(line) < 1 | is.na(line$over_under[1]) | is.na(line$spread[1]) ){line <- subset(lines,provider == "Bovada")}
# bet$home_score <- ifelse(as.numeric(bet$spread) < 0, as.numeric(bet$over_under) + as.numeric(bet$spread),  as.numeric(bet$over_under) - as.numeric(bet$spread))
#
# bet$away_score <- as.numeric(bet$over_under) - as.numeric(bet$home_score)
bet <- data.frame(home_score=0,away_score=0,total=0,home_team=0,away_team=0,spread=0, home_conference=0)
bet$total <- as.numeric(line$over_under[1])
bet$spread <- as.numeric(line$spread[1])
bet$home_score <- ifelse(bet$spread  < 0, (bet$total/2)-(bet$spread/2), (bet$total/2)+(bet$spread/2))
bet$away_score <- bet$total - bet$home_score
bet$home_team <- ht
bet$away_team <- at
bet %>%
transmute(Game_Total = total,
Home_Team = home_team,
Home_Score = home_score, Away_Score= away_score,
Away_Team = away_team, Home_Spread = spread) %>%
gt() %>%
#gt_fmt_cfb_logo(columns = c(Conference)) %>%
gt_fmt_cfb_wordmark(columns = c('Home_Team','Away_Team')) %>%
cols_align(
align = c('center'),
columns = everything()
) %>%   cols_label(
Game_Total = md('**O/U**'),
Home_Team = md('**Home**'),
Home_Score = md('**Home Score**'),
Away_Score= md('**Away Score**'),
Away_Team = md('**Away**'),
Home_Spread = md('**Home Spread**')
) %>%
tab_header(
title = md("**Vegas Lines**"),
subtitle = md("Harrison Eller")
) %>%
fmt_number(
columns = c(Home_Score, Away_Score, Game_Total, Home_Spread)
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(Home_Score, Away_Score, Game_Total,Home_Spread)
)
)
tab <- TEAMS %>%
filter(team %in% c(ht,at)) %>%
select(team, Total_YPG, Passing_YPG,Rushing_YPG, Passing_YPA, Passing_YPC, Rushing_YPA, pass_TDs, rush_TDs, passes_intercepted, off_success_rate, off_explosiveness,off_power_success,off_passing_plays_success_rate, off_passing_plays_explosiveness, off_rushing_plays_success_rate, off_rushing_plays_explosiveness)
t <- TEAMS %>%
filter(team %in% c(ht,at))
t
View(t)
TEAMS$total_yds
TEAMS$games
stats
library(cfbplotR)
cfbd_team_info()
team_inf0 = cfbd_team_info()
team_info= cfbd_team_info()
write.csv("C:\Users\Harrison Eller\CFB_Analytics\team_info.csv")
write.csv("C:\\Users\\Harrison Eller\\CFB_Analytics\\team_info.csv")
write.csv(team_info,"C:\\Users\\Harrison Eller\\CFB_Analytics\\team_info.csv")
ht=c('Alabama')
at=c("Texas")
input_season = 2023
week = 2
include_scarlett = 'yes'
df = data.frame()
#conference = c('SEC')
fbs = cfbd_conferences()
fbs = subset(fbs, classification == 'fbs')
fbs = fbs[1:10,]
fbs_teams = load_cfb_teams()
fbs_teams = subset(fbs_teams, classification == 'fbs')
# team setup
# ht = cfbd_game_info(2022, week = week, conference = conference)$home_team[1]
# home_team_filter = ht = cfbd_game_info(2022, week = week, conference = conference)$home_team[1]
# at = cfbd_game_info(2022, week = week, conference = conference)$away_team[1]
ht=c('Tulane')
at=c("Ole Miss")
stats <- cfbd_stats_season_team(input_season)
TEAMS <- cfbd_stats_season_advanced(input_season)
TEAMS <- inner_join(stats,TEAMS,by = 'team')
TEAMS$Total_YPG <- TEAMS$total_yds / (week-1)
TEAMS$Passing_YPG <- TEAMS$net_pass_yds / (week-1)
TEAMS$Rushing_YPG <- TEAMS$rush_yds / (week-1)
TEAMS$Passing_YPA <- TEAMS$net_pass_yds / TEAMS$pass_atts
TEAMS$Passing_YPC <- TEAMS$net_pass_yds / TEAMS$pass_comps
TEAMS$Rushing_YPA <- TEAMS$rush_yds / TEAMS$rush_atts
TEAMS$third_down_conv_rate<- TEAMS$third_down_convs / TEAMS$third_downs
lines <- cfbd_betting_lines(year = 2023, week = week, team = ht)
line <- subset(lines,provider == "DraftKings")
if (nrow(line) < 1 | is.na(line$over_under[1]) | is.na(line$spread[1]) ){line <- subset(lines,provider == "Bovada")}
# bet$home_score <- ifelse(as.numeric(bet$spread) < 0, as.numeric(bet$over_under) + as.numeric(bet$spread),  as.numeric(bet$over_under) - as.numeric(bet$spread))
#
# bet$away_score <- as.numeric(bet$over_under) - as.numeric(bet$home_score)
bet <- data.frame(home_score=0,away_score=0,total=0,home_team=0,away_team=0,spread=0, home_conference=0)
bet$total <- as.numeric(line$over_under[1])
bet$spread <- as.numeric(line$spread[1])
bet$home_score <- ifelse(bet$spread  < 0, (bet$total/2)-(bet$spread/2), (bet$total/2)+(bet$spread/2))
bet$away_score <- bet$total - bet$home_score
bet$home_team <- ht
bet$away_team <- at
TEAMS
inner_join(team_info,TEAMS,by = c("school"="team"))
df <- inner_join(team_info,TEAMS,by = c("school"="team"))
View(df)
bet
lines <- cfbd_betting_lines(year = 2023, week = week, team = ht)
line <- subset(lines,provider == "DraftKings")
if (nrow(line) < 1 | is.na(line$over_under[1]) | is.na(line$spread[1]) ){line <- subset(lines,provider == "Bovada")}
# bet$home_score <- ifelse(as.numeric(bet$spread) < 0, as.numeric(bet$over_under) + as.numeric(bet$spread),  as.numeric(bet$over_under) - as.numeric(bet$spread))
#
# bet$away_score <- as.numeric(bet$over_under) - as.numeric(bet$home_score)
bet <- data.frame(home_score=0,away_score=0,total=0,home_team=0,away_team=0,spread=0, home_conference=0)
bet$total <- as.numeric(line$over_under[1])
bet$spread <- as.numeric(line$spread[1])
bet$home_score <- ifelse(bet$spread  < 0, (bet$total/2)-(bet$spread/2), (bet$total/2)+(bet$spread/2))
bet$away_score <- bet$total - bet$home_score
bet$home_team <- ht
bet$away_team <- at
bet
ht=c('Alabama')
at=c("Texas")
lines <- cfbd_betting_lines(year = 2023, week = week, team = ht)
line <- subset(lines,provider == "DraftKings")
if (nrow(line) < 1 | is.na(line$over_under[1]) | is.na(line$spread[1]) ){line <- subset(lines,provider == "Bovada")}
# bet$home_score <- ifelse(as.numeric(bet$spread) < 0, as.numeric(bet$over_under) + as.numeric(bet$spread),  as.numeric(bet$over_under) - as.numeric(bet$spread))
#
# bet$away_score <- as.numeric(bet$over_under) - as.numeric(bet$home_score)
bet <- data.frame(home_score=0,away_score=0,total=0,home_team=0,away_team=0,spread=0, home_conference=0)
bet$total <- as.numeric(line$over_under[1])
bet$spread <- as.numeric(line$spread[1])
bet$home_score <- ifelse(bet$spread  < 0, (bet$total/2)-(bet$spread/2), (bet$total/2)+(bet$spread/2))
bet$away_score <- bet$total - bet$home_score
bet$home_team <- ht
bet$away_team <- at
bet
week
lines <- cfbd_betting_lines(year = 2023, week = week)
write.csv(lines,"game_lines.csv")
